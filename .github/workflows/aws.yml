name: CI/CD Pipeline with AWS Credentials

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Environment
      run: |
        echo "Updating system packages..."
        sudo apt-get update -y
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

    - name: Validate AWS CLI
      run: |
        echo "Testing AWS CLI configuration..."
        aws sts get-caller-identity || (echo "AWS credentials not configured properly!" && exit 1)

    - name: Authenticate with AWS ECR
      run: |
        echo "Authenticating with AWS ECR..."
        ECR_URL="<your-ecr-url>" # Replace with actual ECR URL
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_URL || exit 1

    - name: Pull Docker Image
      run: |
        echo "Pulling Docker image from ECR..."
        docker pull 430118853371.dkr.ecr.us-east-2.amazonaws.com/mi_fatality_prediction:latest || exit 1

    - name: Run Docker Container
      run: |
        echo "Running the Docker container..."
        docker stop mi_fatality_prediction || true
        docker rm mi_fatality_prediction || true
        docker run -d --name mi_fatality_prediction -p 8080:8080 <your-ecr-url>/mi_fatality_prediction:latest || exit 1

    - name: Configure Nginx
      run: |
        echo "Configuring Nginx..."
        cat <<EOF | sudo tee /etc/nginx/sites-available/fastapi
        server {
            listen 80;
            server_name localhost;

            location / {
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
        }
        EOF
        sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
        sudo nginx -t || exit 1
        sudo systemctl restart nginx || exit 1

    - name: Test Deployment
      run: |
        echo "Testing deployment..."
        curl -v http://localhost || exit 1
