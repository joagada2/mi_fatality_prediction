name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to AWS ECR
      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        env:
          ECR_URL: 430118853371.dkr.ecr.us-east-2.amazonaws.com
          IMAGE_NAME: mi_fatality_prediction
        run: |
          docker build -t $ECR_URL/$IMAGE_NAME:latest .
          docker push $ECR_URL/$IMAGE_NAME:latest

      # Step 5: Deploy to EC2 Instance
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Updating EC2 instance..."
            sudo apt update && sudo apt upgrade -y

            echo "Installing Docker..."
            sudo apt-get remove docker docker-engine docker.io containerd runc || true
            sudo apt install -y docker.io

            echo "Installing Caddy..."
            sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /usr/share/keyrings/caddy-archive-keyring.asc
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/deb.debian.default.track' | sudo tee /etc/apt/sources.list.d/caddy-stable.list
            sudo apt update
            sudo apt install caddy -y

            echo "Stopping old containers..."
            docker container stop $(docker container ls -aq) || true
            docker container rm $(docker container ls -aq) || true

            echo "Pulling new Docker image..."
            docker pull $ECR_URL/$IMAGE_NAME:latest

            echo "Starting Docker container..."
            docker run -d --name $IMAGE_NAME -p 8080:8080 $ECR_URL/$IMAGE_NAME:latest

            echo "Configuring Caddy..."
            echo ':80 {
                reverse_proxy 127.0.0.1:8080
            }' | sudo tee /etc/caddy/Caddyfile

            echo "Restarting Caddy..."
            sudo systemctl restart caddy

            echo "Deployment completed!"

      # Step 6: Verify the deployment
      - name: Verify deployment
        run: |
          curl -v http://${{ secrets.EC2_HOST }}
