name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up Environment
      run: |
        sudo apt update
        sudo apt install -y unzip nginx docker.io
        echo "Ensuring Docker and Nginx services are running..."
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo systemctl start nginx
        sudo systemctl enable nginx

    - name: Add User to Docker Group
      run: |
        echo "Adding current user to Docker group..."
        sudo usermod -aG docker $USER

    - name: Install AWS CLI
      run: |
        echo "Installing AWS CLI..."
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Authenticate AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        echo "Authenticating with AWS ECR..."
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

    - name: Pull Docker Image
      run: |
        echo "Pulling Docker image..."
        docker pull ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Configure and Restart Nginx
      run: |
        echo "Configuring Nginx..."
        sudo bash -c 'cat > /etc/nginx/sites-available/fastapi' << 'EOL'
        server {
            listen 80;
            server_name localhost;

            location / {
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
        }
        EOL
        sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/

        echo "Ensuring Nginx log directory exists..."
        sudo mkdir -p /var/log/nginx
        sudo chown -R www-data:www-data /var/log/nginx

        echo "Validating Nginx configuration..."
        sudo nginx -t || { echo "Nginx configuration is invalid!"; exit 1; }

        echo "Restarting Nginx..."
        sudo systemctl restart nginx || { echo "Failed to restart Nginx! Check logs."; sudo journalctl -xeu nginx; exit 1; }

    - name: Run Docker Container
      run: |
        echo "Running Docker container..."
        docker run -d -p 8080:8080 --name fastapi_container ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Health Check
      run: |
        echo "Performing health check..."
        curl -f http://localhost || { echo "Health check failed!"; exit 1; }

    - name: Cleanup
      run: |
        echo "Cleaning up disk space..."
        docker system prune -af
        sudo apt autoremove -y
