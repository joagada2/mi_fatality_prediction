name: Deploy Application to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Fix Package Conflicts
      run: |
        echo "Resolving package conflicts..."
        sudo apt-get update
        sudo apt-get remove -y moby-containerd containerd || true
        sudo apt-get autoremove -y || true
        sudo dpkg --configure -a || true
        sudo apt-get install -f -y || true

    - name: Install Docker
      run: |
        echo "Installing Docker and containerd..."
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    - name: Install Additional Dependencies
      run: |
        echo "Installing Nginx, unzip, and AWS CLI..."
        sudo apt-get install -y nginx unzip awscli

    - name: Configure Nginx
      run: |
        echo "Configuring Nginx..."
        cat <<EOL | sudo tee /etc/nginx/sites-available/default
        server {
            listen 80;
            server_name 3.17.13.87;

            location / {
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
        }
        EOL
        sudo nginx -t
        sudo systemctl restart nginx

    - name: Authenticate AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "us-east-2"
      run: |
        echo "Authenticating with AWS ECR..."
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 430118853371.dkr.ecr.us-east-2.amazonaws.com

    - name: Pull and Run Docker Container
      run: |
        echo "Pulling and running Docker container..."
        docker pull 430118853371.dkr.ecr.us-east-2.amazonaws.com/mi_fatality_prediction:latest
        docker stop my_container || true
        docker rm my_container || true
        docker run -d --name my_container -p 8080:8080 430118853371.dkr.ecr.us-east-2.amazonaws.com/mi_fatality_prediction:latest

    - name: Verify Deployment
      run: |
        echo "Verifying application deployment..."
        curl -v http://3.17.13.87 || exit 1
